{
    "openapi": "3.0.0",
    "info": {
        "title": "User Management Api",
        "description": "Create a RESTful API for managing user accounts with basic CRUD operations",
        "version": "1.0.0"
    }, 
    "servers": [
        {
            "url": "http://localhost:3000/api/",
            "description": ""
        }
    ],
    "paths": {
        "/users":{
            "post":{
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "description":"Create a new user",
                "requestBody":{
                    "description":"Create a new user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses":{
                    "200": {
                        "description": "User Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCreatedResponse200"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorEmail"
                                }
                            }
                        }
                    },
                    "500" : {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    },
                    "500 " : {
                        "description": "Sequelize Database Error ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequelizeDatabaseError"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/users ":{
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "get all users",
                "description":"get all users",
                "responses" : {
                    "200" : {
                        "description":"get all users",
                        "content":{
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getAllUsersResponse200"
                                }
                            }
                        }
                    },
                    "500" : {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/users/{id}" : {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a user by id",
                "description":"Get a user by id",
                "parameters": [
                    {
                        "in" : "path",
                        "name" : "id",
                        "description" : "id generated by uuid",
                        "schema" : {
                            "type" : "string",
                            "example" : "631d2fc8-2cd9-49dc-85de-70ea96003781"
                        },
                        "required": true
                    }
                ],
                "responses":{
                    "200" : {
                        "description":"got a users by id",
                        "content":{
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getUserByIdResponse200"
                                }
                            }
                        }
                    },
                    "404" : {
                        "description": "User Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserNotFound"
                                }
                            }
                        }
                    },
                    "500" : {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/users/{id} " : {
            "put" : {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user by id",
                "description":"Update user by id",
                "parameters": [
                    {
                        "in" : "path",
                        "name" : "id",
                        "description" : "id generated by uuid",
                        "schema" : {
                            "type" : "string",
                            "example" : "631d2fc8-2cd9-49dc-85de-70ea96003781"
                        },
                        "required": true
                    }
                ],
                "requestBody" : {
                    "description":"Enter same id that enterd in parameter, email, name",
                    "content" :{
                        "application/json" : {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses" : {
                    "200": {
                        "description": "User Updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserUpdatedResponse200"
                                }
                            }
                        }
                    },
                    "404" : {
                        "description": "User Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserNotFound"
                                }
                            }
                        }
                    },
                    "401" : {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorUpdateUser"
                                }
                            }
                        }
                    },
                    "401 " : {
                        "description": "Unauthorized Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "400" : {
                        "description": "Conflict b/w Users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictFound"
                                }
                            }
                        }
                    },
                    "500" : {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    },
                    "500 " : {
                        "description": "Sequelize Database Error ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequelizeDatabaseError"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/users/{id}  " : {
            "delete" : {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete user by id",
                "description":"Delete user by id",
                "parameters": [
                    {
                        "in" : "path",
                        "name" : "id",
                        "description" : "id generated by uuid",
                        "schema" : {
                            "type" : "string",
                            "example" : "872f3309-37a7-43ef-9833-3e4a403f2b8a"
                        },
                        "required": true
                    }
                ],
                "responses" : {
                    "200" : {
                        "description" : "User Deleted Successfully",
                        "content": {
                            "application/json": {
                                "$ref": "#/components/schemas/UserDeletedResponse200"
                            }
                        }
                    },
                    "404" : {
                        "description": "User Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserNotFound"
                                }
                            }
                        }
                    },
                    "500" : {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    },
                    "500 " : {
                        "description": "Sequelize Database Error ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequelizeDatabaseError"
                                }
                            }
                        }
                    },
                    "401 " : {
                        "description": "Unauthorized Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CreateUserRequest": {
                "type": "object",
                "properties": {
                    "email" : {
                        "type" : "email",
                        "example" : "test@vivek.com"
                    },
                    "password" : {
                        "type" : "string",
                        "min" : 8,
                        "example" : "test12356789",
                        "required": true
                    },
                    "name": {
                        "type": "string",
                        "example":"Vivek Tripathi"
                    }
                },
                "xml": {
                    "name": "CreateUser"
                }
            },
            "UserCreatedResponse200": {
                "type": "object",
                "properties": {
                    "new_user":{
                        "type" : "object",
                        "example" : {
                            "id": "631d2fc8-2cd9-49dc-85de-70ea96003781",
                            "version": 0,
                            "createdAt": "2023-09-15T10:25:49.972Z",
                            "updatedAt": "2023-09-15T10:25:49.972Z",
                            "email": "test@gmail.com",
                            "name": "Vivek Testing"
                        }
                    },
                    "token": {
                        "type" : "string",
                        "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2MzFkMmZjOC0yY2Q5LTQ5ZGMtODVkZS03MGVhOTYwMDM3ODEiLCJpYXQiOjE2OTQ3NzM1NDksImV4cCI6MTY5OTk1NzU0OX0.2BNWCn7eFTsMOPVQp2cTIZ97ExX7dnvk1-YhTw-PiJM"
                    }
                },
                "xml": {
                    "name": "CreateUserSucessResponse"
                }
            },
            "getAllUsersResponse200":{
                "type":"array",
                "items": {
                    "type" : "object",
                    "example" : {
                        "id": "631d2fc8-2cd9-49dc-85de-70ea96003781",
                        "email": "test@gmail.com",
                        "name": "Vivek Testing",
                        "version": 0,
                        "createdAt": "2023-09-15T10:25:49.972Z",
                        "updatedAt": "2023-09-15T10:56:04.365Z"
                    }
                },
                "xml" : {
                    "name" : "Get All Users Success Response"
                } 

            },
            "getUserByIdResponse200":{
                "type":"object",
                "example":{
                    "id": "631d2fc8-2cd9-49dc-85de-70ea96003781",
                    "email": "test@gmail.com",
                    "name": "Vivek Testing Updated",
                    "version": 0,
                    "createdAt": "2023-09-15T10:25:49.972Z",
                    "updatedAt": "2023-09-15T10:56:04.365Z"
                },
                "xml" : {
                    "name" :"Get A user By ID success Response"
                }

            },
            "UpdateUserRequest": {
                "type": "object",
                "properties": {
                    "id" : {
                        "type" : "string",
                        "example" : "631d2fc8-2cd9-49dc-85de-70ea96003781"
                    },
                    "email" : {
                        "type" : "email",
                        "example" : "test@vivek.com"
                    },
                    "name": {
                        "type": "string",
                        "example":"Vivek Tripathi Updated1"
                    },
                    "version" : {
                        "type" : "number",
                        "example" : 0
                    }
                },
                "xml": {
                    "name": "UpdateUserRequest"
                }
            },
            "UserUpdatedResponse200": {
                "type": "object",
                "properties": {
                    "new_user":{
                        "type" : "object",
                        "example" : {
                            "id": "631d2fc8-2cd9-49dc-85de-70ea96003781",
                            "version": 1,
                            "createdAt": "2023-09-15T10:25:49.972Z",
                            "updatedAt": "2023-09-15T14:24:25.342Z",
                            "email": "test@gmail.com",
                            "name": "Vivek Testing Updated1"
                        }
                    }
                },
                "xml": {
                    "name": "UpdateUserSucessResponse"
                }
            },
            "UserDeletedResponse200": {
                "type": "object",
                "properties": {
                    "deletedUserEmail" : {
                        "type": "email",
                        "example" : "test1@vivek.com"
                    },
                    "deleteCount" : {
                        "type":"number",
                        "example":1
                    }
                },
                "xml": {
                    "name": "DeleteUserSucessResponse"
                }
            },
            "UserNotFound" : {
                "type":"string",
                "example" : "User not Found"
            },
            "ConflictFound" : {
                "type":"string",
                "example" : "Conflict. User data has been updated by another request."
            },
            "ValidationErrorEmail" : {
                "type":"string",
                "example" : "email must be a valid email"
            },
            "ValidationErrorUpdateUser" : {
                "type":"string",
                "example" : "id must be [ref:param_id]"
            },
            "InternalServerError" : {
                "type":"string",
                "example" : "Internal Server Error"
            },
            "SequelizeDatabaseError" : {
                "type":"string",
                "example" : "Query Specific Error Message"
            },
            "UnauthorizedError" : {
                "type":"string",
                "example":"The user is not authorized"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "Authorization",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}